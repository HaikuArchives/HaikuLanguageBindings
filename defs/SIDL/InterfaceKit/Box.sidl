<bindings name="Haiku::Box">
	<doc>Exposes the Box object</doc>
	<binding source="BBox" source-inherits="BView" target="Haiku::Box" target-inherits="Haiku::View">
		<doc>Exposes the Box object</doc>
		<functions>
			<constructor>
				<doc>Creates a Box. The box has no label; use SetLabel to assign one.</doc>
				<param name="frame" type="BRect" action="input" />
				<param name="name" type="const char*" action="input" default="NULL" />
				<param name="resizingMode" type="uint32" action="input" default="B_FOLLOW_LEFT | B_FOLLOW_TOP" />
				<param name="flags" type="uint32" action="input" default="B_WILL_DRAW | B_FRAME_EVENTS | B_NAVIGABLE_JUMP" />
				<param name="border" type="border_style" action="input" default="B_FANCY_BORDER" />
			</constructor>
			<constructor overload-name="FromMessage">
				<param name="archive" type="BMessage*" action="input" />
			</constructor>
			<destructor />
			<!-- Archive -->
			<method name="SetBorder">
				<doc>Sets the border style.</doc>
				<param name="border" type="border_style" action="input" />
			</method>
			<method name="Border">
				<doc>Gets the border style.</doc>
				<return type="border_style" action="output" />
			</method>
			<method name="SetLabel">
				<doc>Sets the label.</doc>
				<param name="string" type="const char*" action="input" />
			</method>
			<method name="Label">
				<doc>Gets the label.</doc>
				<return type="const char*" action="output" />
			</method>
			<method name="SetLabel" overload-name="View">
				<doc>Sets the label View.</doc>
				<param name="viewLabel" type="BView*" action="input" />
				<return type="status_t" action="error" success="B_OK" />
			</method>
			<method name="LabelView" overload-name="View">
				<doc>Gets the label View.</doc>
				<return type="BView*" action="output" />
			</method>
			<!-- AttachedToWindow -->
			<!-- Draw -->
			<!-- FrameResized -->
		</functions>
	</binding>
</bindings>
